# This should generally match the number of CPU cores available to fully utiliz>
worker_processes 1;

 # Define the maximum number of simultaneous connections that can be handled by>
events {
    worker_connections 1024;
}

http {
    # Include MIME types for proper file handling (e.g., text/html for HTML fil>
    include mime.types;

    # Define an upstream block to load balance between Node.js backend servers.
    # The 'least_conn' directive will send requests to the backend server with >
    upstream nodejs_cluster {
        least_conn;

        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
        server 127.0.0.1:3003;
}

    # Server block for handling HTTPS requests on port 443.
    server {
        listen 443 ssl;
        server_name localhost;

        # Define the SSL certificate and key files for secure connections.
        ssl_certificate /home/hatice/nginx-certs/nginx-selfsigned.crt;
        ssl_certificate_key /home/hatice/nginx-certs/nginx-selfsigned.key;

        # Location block to handle requests and proxy them to the Node.js backe>
         location / {
            proxy_pass http://nodejs_cluster; # Forward incoming requests to th>

            # Set headers for the proxied request. 
            # These headers include the original host and the real IP address o>
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
                }
    }

    # Server block to handle HTTP requests on port 8080, which will redirect to>
    server {

        listen 8080;
        server_name localhost;

        # Redirect all incoming HTTP requests to HTTPS (port 443).
        location / {
            return 301 https://$host$request_uri;
        }
    }
}